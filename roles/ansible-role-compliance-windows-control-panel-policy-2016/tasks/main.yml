---
# ==================================================================
# tasks file for ansible-role-compliance-windows-control-panel-policy-2016
# ==================================================================
#
#
# ==================================================================
# collect hostname and ip address information
# ==================================================================
- name: collect hostname
  win_shell: >
    $sysinfo=Get-WmiObject -Class win32_computersystem;
    $server="{0}.{1}" -f $sysinfo.Name, $sysinfo.domain;
    $server
  register: FQDN_hostname
  ignore_errors: true

- name: set output
  set_fact:
   FQDN_hostname: "{{ FQDN_hostname.stdout_lines | join }}"

- block:
   - debug:
      msg:
       - "The FQDN hostname is.....{{ FQDN_hostname }}"

- name: collect ip address
  win_shell: >
     (Get-NetIPConfiguration | Where-Object { $_.IPv4DefaultGateway -ne
     $null -and $_.netadapter.status -ne "Disconnected"}).ipv4address.ipaddress
  register: default_ipv4_address
  ignore_errors: true

- name: set output
  set_fact:
   default_ipv4_address: "{{ default_ipv4_address.stdout_lines }}"

- block:
   - debug:
      msg:
       - "The default_ipv4_address is.....{{ default_ipv4_address }}"


# ==================================================================
# Get O\S information
# ==================================================================
- name: "Get Operating Systerm version information"
  win_shell: (get-WMIobject win32_operatingsystem).Name
  register: Win_os_ver_out
  ignore_errors: true

- name: "set output variable"
  set_fact:
   Win_os_ver_out="{{ Win_os_ver_out.stdout_lines|list|join }}"

- name: "Check and ensure server is a windows 2016 server"
  fail:
   msg: "This server is NOT a windows 2016 server: {{ Win_os_ver_out }}"
  when: approved_windows_ver not in Win_os_ver_out

- block:
   - debug:
      msg:
       - "This server IS a windows 2016 server: {{ Win_os_ver_out }}"
  when: approved_windows_ver in Win_os_ver_out


# =====================================================================
# 18.1.1.1 (L1) Ensure 'Prevent enabling lock screen camera' is set to 'Enabled'
# =====================================================================
- name: "18.1.1.1 (L1)'Prevent enabling lock screen camera' is set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoLockScreenCamera setting (18.1.1.1)"
   check_against: "{{  NoLockScreenCamera_cis  }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -name
     "NoLockScreenCamera"|Select-Object -ExpandProperty "NoLockScreenCamera"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
    name: "NoLockScreenCamera"
    data: "1"
    type: dword
  when: execute_18_1_1_1 == "YES"

# ============================================================================
# 18.1.1.2 (L1) 'Prevent enabling lock screen slide show' is set to 'Enabled'
# ============================================================================
- name: "18.1.1.2 (L1)'Prevent enabling lock screen slide show'set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoLockScreenSlideshow setting (18.1.1.2)"
   check_against: "{{ NoLockScreenSlideshow_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization" -name
     "NoLockScreenSlideshow"|Select-Object
     -ExpandProperty "NoLockScreenSlideshow"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
    name: "NoLockScreenSlideshow"
    data: "1"
    type: dword
  when: execute_18_1_1_2 == "YES"

# ==========================================================================
# 18.1.2.1 (L1) Ensure 'Allow Input Personalization' is set to 'Disabled'
# ==========================================================================
- name: "18.1.2.1 (L1) 'Allow Input Personalization' is set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowInputPersonalization setting (18.1.2.1)"
   check_against: "{{ AllowInputPersonalization_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\InputPersonalization" -name
     "AllowInputPersonalization"|Select-Object
     -ExpandProperty "AllowInputPersonalization"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\InputPersonalization
    name: "AllowInputPersonalization"
    data: "0"
    type: dword
  when: execute_18_1_2_1 == "YES"

# =======================================================================
# 19.1.3.1 (L1) Ensure 'Enable screen saver' is set to 'Enabled' (Scored)
# =======================================================================
- name: "19.1.3.1 (L1) 'Enable screen saver' is set to 'Enabled' (Scored)"
  include_tasks: win_check.yml
  vars:
   title: "The ScreenSaveActive setting (19.1.3.1)"
   check_against: "{{ ScreenSaveActive_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop" -name
     "ScreenSaveActive"|Select-Object -ExpandProperty "ScreenSaveActive"
   win_regedit_cmd:
    path: HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop
    name: "ScreenSaveActive"
    data: "1"
    type: string
  when: execute_19_1_3_1 == "YES"

# =========================================================================
# 19.1.3.2 (L1) 'Force specific screen saver:'-'Enabled: scrnsave.scr'
# =========================================================================
- name: "19.1.3.2 (L1) 'Force specific screen saver:' - 'Enabled: scrnsave.scr'"
  include_tasks: win_check.yml
  vars:
   title: "The SCRNSAVE.EXE setting (19.1.3.2)"
   check_against: "{{ SCRNSAVE_EXE_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop" -name
     "SCRNSAVE.EXE"|Select-Object -ExpandProperty "SCRNSAVE.EXE"
   win_regedit_cmd:
    path: 'HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop'
    name: "SCRNSAVE.EXE"
    data: "scrnsave.scr"
    type: string
  when: execute_19_1_3_2 == "YES"

# ============================================================================
# 19.1.3.3 (L1) Ensure 'Password protect the screen saver' is set to 'Enabled'
# ============================================================================
- name: "19.1.3.3 (L1) 'Password protect the screen saver' is set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The ScreenSaverIsSecure setting (19.1.3.3)"
   check_against: "{{ ScreenSaverIsSecure_cis  }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop" -name
     "ScreenSaverIsSecure"|Select-Object
     -ExpandProperty "ScreenSaverIsSecure"
   win_regedit_cmd:
    path: 'HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop'
    name: "ScreenSaverIsSecure"
    data: "1"
    type: string
  when: execute_19_1_3_3 == "YES"

# ============================================================================
# 19.1.3.4 (L1)'Scrn svr tmout' set to 'Enabled: 900 secs or fewer, but not 0'
# ============================================================================
- name: "19.1.3.4 (L1)'Scrn svr tmout' = 'Enbld: 900 secs or fewer, but not 0'"
  include_tasks: win_check_less_than_equal_to_but_not_zero.yml
  vars:
   title: "The ScreenSaveTimeOut setting (19.1.3.4)"
   check_against: "{{ ScreenSaveTimeOut_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop" -name
     "ScreenSaveTimeOut"|Select-Object -ExpandProperty "ScreenSaveTimeOut"
   win_regedit_cmd:
    path: 'HKCU:\Software\Policies\Microsoft\Windows\Control Panel\Desktop'
    name: "ScreenSaveTimeOut"
    data: "900"
    type: string
  when: execute_19_1_3_4 == "YES"


# ===========================================================================
# 19.5.1.1 (L1) 'Turn off toast notifications on the lock screen' = 'Enabled'
# ===========================================================================
- name: "19.5.1.1 (L1) 'Turn off toast ntfctns on the lock screen'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoToastApplicationNotificationOnLockScreen setting (19.5.1.1)"
   check_against: "{{ NoToastApplicationNotificationOnLockScreen_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     'HKCU:\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\PushNotifications'
     -name "NoToastApplicationNotificationOnLockScreen"|Select-Object
     -ExpandProperty "NoToastApplicationNotificationOnLockScreen"
   win_regedit_cmd:
    path: "{{ spmw_reg }}CurrentVersion\\PushNotifications"
    name: "NoToastApplicationNotificationOnLockScreen"
    data: "1"
    type: dword
  when: execute_19_5_1_1 == "YES"
